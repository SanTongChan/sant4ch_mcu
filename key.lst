C51 COMPILER V9.01   KEY                                                                   07/02/2017 10:23:21 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN key.obj
COMPILER INVOKED BY: F:\Program Files\Keil\C51\BIN\C51.EXE code\key\key.c BROWSE INCDIR(.\code\key;.\code\logic;.\code\t
                    -imer;.\code\driver;.\code\led;.\code\common) DEBUG OBJECTEXTEND PRINT(.\key.lst) OBJECT(key.obj)

line level    source

   1          #include "key.h"
   2          #include "key_driver.h"
   3          #include "led.h"
   4          #include "logic.h"
   5          
   6          sbit KEY1 = P1^3;
   7          sbit KEY2 = P1^2;
   8          sbit KEY3 = P1^1;
   9          sbit KEY4 = P1^0;
  10          sbit KEY5 = P1^4;
  11          uint8_t h595_val = 0x0f;
  12          
  13          static bool key1_is_press(void)
  14          {
  15   1          if(0 == KEY1)
  16   1          {
  17   2              return true;
  18   2          }
  19   1          return false;
  20   1      }
  21          static bool key2_is_press(void)
  22          {
  23   1          if(0 == KEY2)
  24   1          {
  25   2              return true;
  26   2          }
  27   1          return false;
  28   1      }
  29          static bool key3_is_press(void)
  30          {
  31   1          if(0 == KEY3)
  32   1          {
  33   2              return true;
  34   2          }
  35   1          return false;
  36   1      }
  37          static bool key4_is_press(void)
  38          {
  39   1          if(0 == KEY4)
  40   1          {
  41   2              return true;
  42   2          }
  43   1          return false;
  44   1      }
  45          static bool key5_is_press(void)
  46          {
  47   1          if(0 == KEY5)
  48   1          {
  49   2              return true;
  50   2          }
  51   1          return false;
  52   1      }
  53          
  54          static void key1_short_press(void)
C51 COMPILER V9.01   KEY                                                                   07/02/2017 10:23:21 PAGE 2   

  55          {
  56   1          if(h595_val | KEY1_595)
  57   1          {
  58   2              h595_val = h595_val & (~KEY1_595);
  59   2                  SendTo595(h595_val);
  60   2          }
  61   1      }
  62          static void key2_short_press(void)
  63          {
  64   1          if(h595_val | KEY2_595)
  65   1          {
  66   2              h595_val = h595_val & (~KEY2_595);
  67   2              SendTo595(h595_val);
  68   2              }
  69   1      }
  70          static void key3_short_press(void)
  71          {
  72   1          if(h595_val | KEY3_595)
  73   1          {
  74   2              h595_val = h595_val & (~KEY3_595);
  75   2              SendTo595(h595_val);
  76   2              }
  77   1      }
  78          static void key4_short_press(void)
  79          {
  80   1          if(h595_val | KEY4_595)
  81   1          {
  82   2              h595_val = h595_val & (~KEY4_595);
  83   2              SendTo595(h595_val);
  84   2              }
  85   1      }
  86          static void key5_short_press(void)
  87          {
  88   1          
  89   1      }
  90          static void key1_short_up_press(void)
  91          {
  92   1          if(!(h595_val & KEY1_595))
  93   1          {
  94   2              if(RELAY1)
  95   2              {
  96   3                  h595_val &= (~RELAY1_595);
  97   3                  h595_val |= KEY1_595;
  98   3              }
  99   2              else
 100   2              {
 101   3                  h595_val |= (KEY1_595 | RELAY1_595); 
 102   3              }
 103   2              SendTo595(h595_val);
 104   2          }
 105   1      }
 106          static void key2_short_up_press(void)
 107          {
 108   1              if(RELAY2)
 109   1          {
 110   2              h595_val &= (~RELAY2_595);
 111   2              h595_val |= KEY2_595;
 112   2          }
 113   1          else
 114   1          {
 115   2              h595_val |= (KEY2_595 | RELAY2_595); 
 116   2          }
C51 COMPILER V9.01   KEY                                                                   07/02/2017 10:23:21 PAGE 3   

 117   1          SendTo595(h595_val);
 118   1      }
 119          static void key3_short_up_press(void)
 120          {
 121   1              if(RELAY3)
 122   1          {
 123   2              h595_val &= (~RELAY3_595);
 124   2              h595_val |= KEY3_595;
 125   2          }
 126   1          else
 127   1          {
 128   2              h595_val |= (KEY3_595 | RELAY3_595); 
 129   2          }
 130   1          SendTo595(h595_val);
 131   1      }
 132          static void key4_short_up_press(void)
 133          {
 134   1              if(RELAY4)
 135   1          {
 136   2              h595_val &= (~RELAY4_595);
 137   2              h595_val |= KEY4_595;
 138   2          }
 139   1          else
 140   1          {
 141   2              h595_val |= (KEY4_595 | RELAY4_595); 
 142   2          }
 143   1          SendTo595(h595_val);
 144   1      }
 145          static void registerKeys(void)
 146          {
 147   1          keyRegisterSingle(key1_is_press,key1_short_press,key1_short_up_press,NULL,NULL,NULL);
 148   1          keyRegisterSingle(key2_is_press,key2_short_press,key2_short_up_press,NULL,NULL,NULL);
 149   1          keyRegisterSingle(key3_is_press,key3_short_press,key3_short_up_press,NULL,NULL,NULL);
 150   1          keyRegisterSingle(key4_is_press,key4_short_press,key4_short_up_press,NULL,NULL,NULL);
 151   1          keyRegisterSingle(key5_is_press,key5_short_press,NULL,NULL,NULL,NULL);
 152   1      }
 153          void keyInit(void)
 154          {
 155   1              P1M1 |= 0x1f;//初始化P10 -> P14为输入
 156   1              P1M2 &= 0Xe0;
 157   1              registerKeys();
 158   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    467    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
