C51 COMPILER V9.01   KEY                                                                   06/30/2017 03:13:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN key.obj
COMPILER INVOKED BY: F:\Program Files\Keil\C51\BIN\C51.EXE code\key\key.c BROWSE INCDIR(.\code\key;.\code\logic;.\code\t
                    -imer;.\code\driver;.\code\led;.\code\common) DEBUG OBJECTEXTEND PRINT(.\key.lst) OBJECT(key.obj)

line level    source

   1          #include "key.h"
   2          #include "key_driver.h"
   3          #include "led.h"
   4          #include "logic.h"
   5          
   6          sbit KEY1 = P1^3;
   7          sbit KEY2 = P1^2;
   8          sbit KEY3 = P1^1;
   9          sbit KEY4 = P1^0;
  10          sbit KEY5 = P1^4;
  11          uint8_t h595_val = 0x0f;
  12          
  13          static bool key1_is_press(void)
  14          {
  15   1          if(0 == KEY1)
  16   1          {
  17   2              return true;
  18   2          }
  19   1          return false;
  20   1      }
  21          static bool key2_is_press(void)
  22          {
  23   1          if(0 == KEY2)
  24   1          {
  25   2              return true;
  26   2          }
  27   1          return false;
  28   1      }
  29          static bool key3_is_press(void)
  30          {
  31   1          if(0 == KEY3)
  32   1          {
  33   2              return true;
  34   2          }
  35   1          return false;
  36   1      }
  37          static bool key4_is_press(void)
  38          {
  39   1          if(0 == KEY4)
  40   1          {
  41   2              return true;
  42   2          }
  43   1          return false;
  44   1      }
  45          static bool key5_is_press(void)
  46          {
  47   1          if(0 == KEY5)
  48   1          {
  49   2              return true;
  50   2          }
  51   1          return false;
  52   1      }
  53          
  54          static void key1_short_press(void)
C51 COMPILER V9.01   KEY                                                                   06/30/2017 03:13:16 PAGE 2   

  55          {
  56   1          MODE_LED = !MODE_LED;
  57   1          h595_val = h595_val & (~KEY1_595);
  58   1              SendTo595(h595_val);
  59   1      }
  60          static void key2_short_press(void)
  61          {
  62   1          MODE_LED = !MODE_LED;
  63   1          h595_val = h595_val & (~KEY2_595);
  64   1              SendTo595(h595_val);
  65   1      }
  66          static void key3_short_press(void)
  67          {
  68   1          MODE_LED = !MODE_LED;
  69   1              h595_val = h595_val & (~KEY3_595);
  70   1              SendTo595(h595_val);
  71   1      }
  72          static void key4_short_press(void)
  73          {
  74   1          MODE_LED = !MODE_LED;
  75   1              h595_val = h595_val & (~KEY4_595);
  76   1              SendTo595(h595_val);
  77   1      }
  78          static void key5_short_press(void)
  79          {
  80   1          MODE_LED = !MODE_LED;
  81   1      }
  82          static void key1_short_up_press(void)
  83          {
  84   1          if(RELAY1)
  85   1          {
  86   2              h595_val &= (~RELAY1_595);
  87   2              h595_val |= KEY1_595;
  88   2          }
  89   1          else
  90   1          {
  91   2              h595_val |= (KEY1_595 | RELAY1_595); 
  92   2          }
  93   1          SendTo595(h595_val);
  94   1      }
  95          static void key2_short_up_press(void)
  96          {
  97   1              if(RELAY2)
  98   1          {
  99   2              h595_val &= (~RELAY2_595);
 100   2              h595_val |= KEY2_595;
 101   2          }
 102   1          else
 103   1          {
 104   2              h595_val |= (KEY2_595 | RELAY2_595); 
 105   2          }
 106   1          SendTo595(h595_val);
 107   1      }
 108          static void key3_short_up_press(void)
 109          {
 110   1              if(RELAY3)
 111   1          {
 112   2              h595_val &= (~RELAY3_595);
 113   2              h595_val |= KEY3_595;
 114   2          }
 115   1          else
 116   1          {
C51 COMPILER V9.01   KEY                                                                   06/30/2017 03:13:16 PAGE 3   

 117   2              h595_val |= (KEY3_595 | RELAY3_595); 
 118   2          }
 119   1          SendTo595(h595_val);
 120   1      }
 121          static void key4_short_up_press(void)
 122          {
 123   1              if(RELAY4)
 124   1          {
 125   2              h595_val &= (~RELAY4_595);
 126   2              h595_val |= KEY4_595;
 127   2          }
 128   1          else
 129   1          {
 130   2              h595_val |= (KEY4_595 | RELAY4_595); 
 131   2          }
 132   1          SendTo595(h595_val);
 133   1      }
 134          static void registerKeys(void)
 135          {
 136   1          keyRegisterSingle(key1_is_press,key1_short_press,key1_short_up_press,NULL,NULL,NULL);
 137   1          keyRegisterSingle(key2_is_press,key2_short_press,key2_short_up_press,NULL,NULL,NULL);
 138   1          keyRegisterSingle(key3_is_press,key3_short_press,key3_short_up_press,NULL,NULL,NULL);
 139   1          keyRegisterSingle(key4_is_press,key4_short_press,key4_short_up_press,NULL,NULL,NULL);
 140   1          keyRegisterSingle(key5_is_press,key5_short_press,key1_short_up_press,NULL,NULL,NULL);
 141   1      }
 142          void keyInit(void)
 143          {
 144   1              P1M1 |= 0x1f;//初始化P10 -> P14为输入
 145   1              P1M2 &= 0Xe0;
 146   1              registerKeys();
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    443    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
